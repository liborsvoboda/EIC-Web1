"use strict";(self.webpackChunkwiql_editor=self.webpackChunkwiql_editor||[]).push([[5062],{95062:(e,o,n)=>{n.r(o),n.d(o,{conf:()=>t,language:()=>r});var t={comments:{lineComment:"'"},brackets:[["(",")"],["[","]"],["If","EndIf"],["While","EndWhile"],["For","EndFor"],["Sub","EndSub"]],autoClosingPairs:[{open:'"',close:'"',notIn:["string","comment"]},{open:"(",close:")",notIn:["string","comment"]},{open:"[",close:"]",notIn:["string","comment"]}]},r={defaultToken:"",tokenPostfix:".sb",ignoreCase:!0,brackets:[{token:"delimiter.array",open:"[",close:"]"},{token:"delimiter.parenthesis",open:"(",close:")"},{token:"keyword.tag-if",open:"If",close:"EndIf"},{token:"keyword.tag-while",open:"While",close:"EndWhile"},{token:"keyword.tag-for",open:"For",close:"EndFor"},{token:"keyword.tag-sub",open:"Sub",close:"EndSub"}],keywords:["Else","ElseIf","EndFor","EndIf","EndSub","EndWhile","For","Goto","If","Step","Sub","Then","To","While"],tagwords:["If","Sub","While","For"],operators:[">","<","<>","<=",">=","And","Or","+","-","*","/","="],identifier:/[a-zA-Z_][\w]*/,symbols:/[=><:+\-*\/%\.,]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,tokenizer:{root:[{include:"@whitespace"},[/(@identifier)(?=[.])/,"type"],[/@identifier/,{cases:{"@keywords":{token:"keyword.$0"},"@operators":"operator","@default":"variable.name"}}],[/([.])(@identifier)/,{cases:{$2:["delimiter","type.member"],"@default":""}}],[/\d*\.\d+/,"number.float"],[/\d+/,"number"],[/[()\[\]]/,"@brackets"],[/@symbols/,{cases:{"@operators":"operator","@default":"delimiter"}}],[/"([^"\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string"]],whitespace:[[/[ \t\r\n]+/,""],[/(\').*$/,"comment"]],string:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"C?/,"string","@pop"]]}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA2Mi5qcyIsIm1hcHBpbmdzIjoicUpBSU8sSUFBSUEsRUFBTyxDQUNkQyxTQUFVLENBQ05DLFlBQWEsS0FFakJDLFNBQVUsQ0FDTixDQUFDLElBQUssS0FDTixDQUFDLElBQUssS0FDTixDQUFDLEtBQU0sU0FDUCxDQUFDLFFBQVMsWUFDVixDQUFDLE1BQU8sVUFDUixDQUFDLE1BQU8sV0FFWkMsaUJBQWtCLENBQ2QsQ0FBRUMsS0FBTSxJQUFLQyxNQUFPLElBQUtDLE1BQU8sQ0FBQyxTQUFVLFlBQzNDLENBQUVGLEtBQU0sSUFBS0MsTUFBTyxJQUFLQyxNQUFPLENBQUMsU0FBVSxZQUMzQyxDQUFFRixLQUFNLElBQUtDLE1BQU8sSUFBS0MsTUFBTyxDQUFDLFNBQVUsY0FHeENDLEVBQVcsQ0FDbEJDLGFBQWMsR0FDZEMsYUFBYyxNQUNkQyxZQUFZLEVBQ1pSLFNBQVUsQ0FDTixDQUFFUyxNQUFPLGtCQUFtQlAsS0FBTSxJQUFLQyxNQUFPLEtBQzlDLENBQUVNLE1BQU8sd0JBQXlCUCxLQUFNLElBQUtDLE1BQU8sS0FFcEQsQ0FBRU0sTUFBTyxpQkFBa0JQLEtBQU0sS0FBTUMsTUFBTyxTQUM5QyxDQUFFTSxNQUFPLG9CQUFxQlAsS0FBTSxRQUFTQyxNQUFPLFlBQ3BELENBQUVNLE1BQU8sa0JBQW1CUCxLQUFNLE1BQU9DLE1BQU8sVUFDaEQsQ0FBRU0sTUFBTyxrQkFBbUJQLEtBQU0sTUFBT0MsTUFBTyxXQUVwRE8sU0FBVSxDQUNOLE9BQ0EsU0FDQSxTQUNBLFFBQ0EsU0FDQSxXQUNBLE1BQ0EsT0FDQSxLQUNBLE9BQ0EsTUFDQSxPQUNBLEtBQ0EsU0FFSkMsU0FBVSxDQUFDLEtBQU0sTUFBTyxRQUFTLE9BQ2pDQyxVQUFXLENBQUMsSUFBSyxJQUFLLEtBQU0sS0FBTSxLQUFNLE1BQU8sS0FBTSxJQUFLLElBQUssSUFBSyxJQUFLLEtBRXpFQyxXQUFZLGlCQUNaQyxRQUFTLG9CQUNUQyxRQUFTLHdFQUVUQyxVQUFXLENBQ1BDLEtBQU0sQ0FFRixDQUFFQyxRQUFTLGVBRVgsQ0FBQyx1QkFBd0IsUUFFekIsQ0FDSSxjQUNBLENBQ0lDLE1BQU8sQ0FDSCxZQUFhLENBQUVWLE1BQU8sY0FDdEIsYUFBYyxXQUNkLFdBQVksbUJBS3hCLENBQ0kscUJBQ0EsQ0FDSVUsTUFBTyxDQUNIQyxHQUFJLENBQUMsWUFBYSxlQUNsQixXQUFZLE1BS3hCLENBQUMsV0FBWSxnQkFDYixDQUFDLE1BQU8sVUFFUixDQUFDLFdBQVksYUFDYixDQUNJLFdBQ0EsQ0FDSUQsTUFBTyxDQUNILGFBQWMsV0FDZCxXQUFZLGVBS3hCLENBQUMsa0JBQW1CLGtCQUNwQixDQUFDLElBQUssU0FBVSxZQUVwQkUsV0FBWSxDQUNSLENBQUMsYUFBYyxJQUNmLENBQUMsVUFBVyxZQUVoQkMsT0FBUSxDQUNKLENBQUMsVUFBVyxVQUNaLENBQUMsV0FBWSxpQkFDYixDQUFDLE1BQU8seUJBQ1IsQ0FBQyxNQUFPLFNBQVUsVSIsInNvdXJjZXMiOlsid2VicGFjazovL3dpcWwtZWRpdG9yLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9zYi9zYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmV4cG9ydCB2YXIgY29uZiA9IHtcbiAgICBjb21tZW50czoge1xuICAgICAgICBsaW5lQ29tbWVudDogXCInXCJcbiAgICB9LFxuICAgIGJyYWNrZXRzOiBbXG4gICAgICAgIFsnKCcsICcpJ10sXG4gICAgICAgIFsnWycsICddJ10sXG4gICAgICAgIFsnSWYnLCAnRW5kSWYnXSxcbiAgICAgICAgWydXaGlsZScsICdFbmRXaGlsZSddLFxuICAgICAgICBbJ0ZvcicsICdFbmRGb3InXSxcbiAgICAgICAgWydTdWInLCAnRW5kU3ViJ11cbiAgICBdLFxuICAgIGF1dG9DbG9zaW5nUGFpcnM6IFtcbiAgICAgICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJywgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJywgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9LFxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJywgbm90SW46IFsnc3RyaW5nJywgJ2NvbW1lbnQnXSB9XG4gICAgXVxufTtcbmV4cG9ydCB2YXIgbGFuZ3VhZ2UgPSB7XG4gICAgZGVmYXVsdFRva2VuOiAnJyxcbiAgICB0b2tlblBvc3RmaXg6ICcuc2InLFxuICAgIGlnbm9yZUNhc2U6IHRydWUsXG4gICAgYnJhY2tldHM6IFtcbiAgICAgICAgeyB0b2tlbjogJ2RlbGltaXRlci5hcnJheScsIG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxuICAgICAgICB7IHRva2VuOiAnZGVsaW1pdGVyLnBhcmVudGhlc2lzJywgb3BlbjogJygnLCBjbG9zZTogJyknIH0sXG4gICAgICAgIC8vIFNwZWNpYWwgYnJhY2tldCBzdGF0ZW1lbnQgcGFpcnNcbiAgICAgICAgeyB0b2tlbjogJ2tleXdvcmQudGFnLWlmJywgb3BlbjogJ0lmJywgY2xvc2U6ICdFbmRJZicgfSxcbiAgICAgICAgeyB0b2tlbjogJ2tleXdvcmQudGFnLXdoaWxlJywgb3BlbjogJ1doaWxlJywgY2xvc2U6ICdFbmRXaGlsZScgfSxcbiAgICAgICAgeyB0b2tlbjogJ2tleXdvcmQudGFnLWZvcicsIG9wZW46ICdGb3InLCBjbG9zZTogJ0VuZEZvcicgfSxcbiAgICAgICAgeyB0b2tlbjogJ2tleXdvcmQudGFnLXN1YicsIG9wZW46ICdTdWInLCBjbG9zZTogJ0VuZFN1YicgfVxuICAgIF0sXG4gICAga2V5d29yZHM6IFtcbiAgICAgICAgJ0Vsc2UnLFxuICAgICAgICAnRWxzZUlmJyxcbiAgICAgICAgJ0VuZEZvcicsXG4gICAgICAgICdFbmRJZicsXG4gICAgICAgICdFbmRTdWInLFxuICAgICAgICAnRW5kV2hpbGUnLFxuICAgICAgICAnRm9yJyxcbiAgICAgICAgJ0dvdG8nLFxuICAgICAgICAnSWYnLFxuICAgICAgICAnU3RlcCcsXG4gICAgICAgICdTdWInLFxuICAgICAgICAnVGhlbicsXG4gICAgICAgICdUbycsXG4gICAgICAgICdXaGlsZSdcbiAgICBdLFxuICAgIHRhZ3dvcmRzOiBbJ0lmJywgJ1N1YicsICdXaGlsZScsICdGb3InXSxcbiAgICBvcGVyYXRvcnM6IFsnPicsICc8JywgJzw+JywgJzw9JywgJz49JywgJ0FuZCcsICdPcicsICcrJywgJy0nLCAnKicsICcvJywgJz0nXSxcbiAgICAvLyB3ZSBpbmNsdWRlIHRoZXNlIGNvbW1vbiByZWd1bGFyIGV4cHJlc3Npb25zXG4gICAgaWRlbnRpZmllcjogL1thLXpBLVpfXVtcXHddKi8sXG4gICAgc3ltYm9sczogL1s9Pjw6K1xcLSpcXC8lXFwuLF0rLyxcbiAgICBlc2NhcGVzOiAvXFxcXCg/OlthYmZucnR2XFxcXFwiJ118eFswLTlBLUZhLWZdezEsNH18dVswLTlBLUZhLWZdezR9fFVbMC05QS1GYS1mXXs4fSkvLFxuICAgIC8vIFRoZSBtYWluIHRva2VuaXplciBmb3Igb3VyIGxhbmd1YWdlc1xuICAgIHRva2VuaXplcjoge1xuICAgICAgICByb290OiBbXG4gICAgICAgICAgICAvLyB3aGl0ZXNwYWNlXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAd2hpdGVzcGFjZScgfSxcbiAgICAgICAgICAgIC8vIGNsYXNzZXNcbiAgICAgICAgICAgIFsvKEBpZGVudGlmaWVyKSg/PVsuXSkvLCAndHlwZSddLFxuICAgICAgICAgICAgLy8gaWRlbnRpZmllcnMsIHRhZ3dvcmRzLCBhbmQga2V5d29yZHNcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAvQGlkZW50aWZpZXIvLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdAa2V5d29yZHMnOiB7IHRva2VuOiAna2V5d29yZC4kMCcgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAb3BlcmF0b3JzJzogJ29wZXJhdG9yJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAZGVmYXVsdCc6ICd2YXJpYWJsZS5uYW1lJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIC8vIG1ldGhvZHMsIHByb3BlcnRpZXMsIGFuZCBldmVudHNcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAvKFsuXSkoQGlkZW50aWZpZXIpLyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2VzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkMjogWydkZWxpbWl0ZXInLCAndHlwZS5tZW1iZXInXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAZGVmYXVsdCc6ICcnXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgLy8gbnVtYmVyc1xuICAgICAgICAgICAgWy9cXGQqXFwuXFxkKy8sICdudW1iZXIuZmxvYXQnXSxcbiAgICAgICAgICAgIFsvXFxkKy8sICdudW1iZXInXSxcbiAgICAgICAgICAgIC8vIGRlbGltaXRlcnMgYW5kIG9wZXJhdG9yc1xuICAgICAgICAgICAgWy9bKClcXFtcXF1dLywgJ0BicmFja2V0cyddLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIC9Ac3ltYm9scy8sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjYXNlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ0BvcGVyYXRvcnMnOiAnb3BlcmF0b3InLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJ2RlbGltaXRlcidcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAvLyBzdHJpbmdzXG4gICAgICAgICAgICBbL1wiKFteXCJcXFxcXXxcXFxcLikqJC8sICdzdHJpbmcuaW52YWxpZCddLFxuICAgICAgICAgICAgWy9cIi8sICdzdHJpbmcnLCAnQHN0cmluZyddXG4gICAgICAgIF0sXG4gICAgICAgIHdoaXRlc3BhY2U6IFtcbiAgICAgICAgICAgIFsvWyBcXHRcXHJcXG5dKy8sICcnXSxcbiAgICAgICAgICAgIFsvKFxcJykuKiQvLCAnY29tbWVudCddXG4gICAgICAgIF0sXG4gICAgICAgIHN0cmluZzogW1xuICAgICAgICAgICAgWy9bXlxcXFxcIl0rLywgJ3N0cmluZyddLFxuICAgICAgICAgICAgWy9AZXNjYXBlcy8sICdzdHJpbmcuZXNjYXBlJ10sXG4gICAgICAgICAgICBbL1xcXFwuLywgJ3N0cmluZy5lc2NhcGUuaW52YWxpZCddLFxuICAgICAgICAgICAgWy9cIkM/LywgJ3N0cmluZycsICdAcG9wJ11cbiAgICAgICAgXVxuICAgIH1cbn07XG4iXSwibmFtZXMiOlsiY29uZiIsImNvbW1lbnRzIiwibGluZUNvbW1lbnQiLCJicmFja2V0cyIsImF1dG9DbG9zaW5nUGFpcnMiLCJvcGVuIiwiY2xvc2UiLCJub3RJbiIsImxhbmd1YWdlIiwiZGVmYXVsdFRva2VuIiwidG9rZW5Qb3N0Zml4IiwiaWdub3JlQ2FzZSIsInRva2VuIiwia2V5d29yZHMiLCJ0YWd3b3JkcyIsIm9wZXJhdG9ycyIsImlkZW50aWZpZXIiLCJzeW1ib2xzIiwiZXNjYXBlcyIsInRva2VuaXplciIsInJvb3QiLCJpbmNsdWRlIiwiY2FzZXMiLCIkMiIsIndoaXRlc3BhY2UiLCJzdHJpbmciXSwic291cmNlUm9vdCI6IiJ9